#pragma once
#include<iostream>
#include<string>
using namespace std;
#define IN_MAX_LEN_TEXT 1024*1024		//максимальный размер исходного кода 1МВ
#define IN_CODE_ENDL '\n'				//символ конца строки

//таблица проверки входной информации, индекс = код (Windows-1251) символа
//значения IN::F - запрещенный символБ IN::T - разрешенный символ, IN::I - игнорировать (не вводить),
//			если 0 <= значение < 256  - то вводиться данное значение

#define IN_CODE_TABLE {\
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::T, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::T, IN::T, IN::T, IN::T, IN::T, IN::T, IN::T, IN::T, IN::T, IN::T, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::T, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::T, IN::F, IN::T, \
		IN::F, IN::F, IN::T, IN::F, IN::F, IN::F, IN::F, IN::F, IN::I,   '!', IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::T, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::T, IN::F, IN::T, \
		IN::F, IN::F, IN::T, IN::F, IN::F, IN::F, IN::F, IN::F, IN::I, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
																														\
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, \
		IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F, IN::F	\
	}

namespace In {
	struct IN {		//исходные данные
		enum { T = 1024, F = 2048, I = 4096 };	//T - допустимый символ, F - недопустимый, I - игнорировать, иначе заменить
		int size;								//размер исходного кода
		int lines;								//кол-во строк
		int ignor;								//кол-во проигнорированных символов	
		string text;                            //исходный код (Windows-1251)
		int code[256];							//таблица проверки: T, F, I новое значние
	};
	IN getIn(wchar_t infile[]);					//ввести и проверить входной поток
}
